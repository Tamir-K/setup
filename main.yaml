- name: Enable RPM Fusion
  ansible.builtin.import_playbook: rpm_fusion.yaml

- name: Install Terminal packages
  hosts: localhost
  gather_facts: no
  tasks:
    - name: Enable COPR repository for Starship
      ansible.builtin.command: dnf copr enable -y atim/starship
      become: yes

    - name: Install terminal utilities
      ansible.builtin.dnf:
        name:
          - git
          - fzf
          - zoxide
          - starship
          - podman
          - gh
        state: present
      become: yes

- name: Install General Packages
  hosts: localhost
  tasks:
    - name: Enable COPR repository for PrismLauncher
      ansible.builtin.command: dnf copr enable -y g3tchoo/prismlauncher
      become: yes

    - name: Install general packages
      ansible.builtin.dnf:
        name:
          - wireshark
          - torbrowser-launcher
          - steam
          - prismlauncher
        state: present
      become: yes
      
    - name: Install direct packages
      ansible.builtin.dnf:
        name:
          - https://mega.nz/linux/repo/Fedora_{{ ansible_distribution_version }}/x86_64/megasync-Fedora_{{ ansible_distribution_version }}.x86_64.rpm # MegaSync
          - https://zoom.us/client/latest/zoom_x86_64.rpm # Zoom
        state: present
        dnf.disable_gpg_check: yes 
      become: yes

- name: Install Signal
  ansible.builtin.import_playbook: signal.yaml

- name: Install VSCodium
  ansible.builtin.import_playbook: vscodium.yaml

- name: Install Virt Manager
  ansible.builtin.import_playbook: virt_manager.yaml

- name: Install TinyTeX
  ansible.builtin.import_playbook: tinytex.yaml

- name: Setup Dotfiles
  hosts: all
  vars:
    dotfiles_repo: "https://github.com/Tamir-K/dotfiles.git"
    dotfiles_bare_dir: "{{ ansible_env.HOME }}/.dotfiles"
    dotfiles_work_tree: "{{ ansible_env.HOME }}"

  tasks:
    - name: Ensure git is installed
      package:
        name: git
        state: present

    - name: Clone dotfiles as a bare repo (idempotent)
      git:
        repo: "{{ dotfiles_repo }}"
        dest: "{{ dotfiles_bare_dir }}"
        bare: yes
        update: no

    - name: Checkout bare repo to home
      command: >
        git --git-dir={{ dotfiles_bare_dir }} --work-tree={{ dotfiles_work_tree }} checkout
      args:
        chdir: "{{ dotfiles_work_tree }}"
      register: checkout
      failed_when: checkout.rc not in [0,1]
      changed_when: checkout.rc == 0
